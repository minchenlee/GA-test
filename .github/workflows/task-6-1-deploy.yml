name: Deploy Application

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Tag version to deploy'
        required: true

jobs:
  notify:
    runs-on: ubuntu-latest
    steps:
      - name: Send notification to Discord
        env:
          DISCORD_WEBHOOK_URL: ${{ secrets.DISCORD_WEBHOOK_URL }}
        run: |
          curl -H "Content-Type: application/json" \
          -d "{\"content\": \"Deployment approval needed: [Approve Deployment](https://github.com/${{ github.repository }}/pulls)\"}" \
          $DISCORD_WEBHOOK_URL

      - name: Create Pull Request for Deployment
        id: create-pr
        uses: peter-evans/create-pull-request@v3
        with:
          secret: ${{ secrets.TOKEN }}
          commit-message: "Deploy request for version ${{ github.event.inputs.version }}"
          title: "Deployment Approval Required for version ${{ github.event.inputs.version }}"
          body: "Please review and approve this pull request to deploy the version to EC2."
          branch: "deploy-${{ github.event.inputs.version }}"

  deploy:
    needs: notify
    runs-on: ubuntu-latest
    if: github.event.pull_request.merged == true
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: SSH into EC2 instance and deploy Docker image
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_PRIVATE_KEY }}
          script: |
            docker pull ${{ steps.login-ecr.outputs.registry }}/${{ env.ECR_REPO_NAME }}:${{ github.event.inputs.version }}
            docker stop backend || true
            docker rm backend || true
            docker run --name backend -d ${{ steps.login-ecr.outputs.registry }}/${{ env.ECR_REPO_NAME }}:${{ github.event.inputs.version }}

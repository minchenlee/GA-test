name: Deploy Application

on:
  push:
    branches:
      - 'task-6-2'

permissions:
  id-token: write   # This is required for requesting the JWT
  contents: read    # This is required for actions/checkout

jobs:
  notify:
    runs-on: ubuntu-latest
    steps:
      - name: Send notification to Discord
        env:
          DISCORD_WEBHOOK_URL: ${{ secrets.DISCORD_WEBHOOK_URL }}
        run: |
          curl -H "Content-Type: application/json" \
          -d "{\"content\": \"Deployment approval needed: [Approve Deployment](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }})\"}" \
          $DISCORD_WEBHOOK_URL
          
  approval:
    needs: notify
    runs-on: ubuntu-latest
    steps:
      - name: Manual approval
        uses: trstringer/manual-approval@v1
        with:
          secret: ${{ secrets.TOKEN }}  
          minimum-approvals: 1
          approvers: minchenlee 
          
  deploy:
    needs: approval
    defaults:
      run:
        working-directory: 'task-6-2/terraform'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: '1.6.6'

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-region: ${{ secrets.AWS_REGION }}
          role-to-assume: ${{ secrets.AWS_GithubActionTerraformRole_ARN }}
          
      - name: Terraform Init
        id: init
        run: terraform init

      - name: Terraform Plan
        id: plan
        run: terraform plan -no-color
        continue-on-error: true

      - name: Terraform Apply
        if: success()
        run: terraform apply -auto-approve -no-color
      
      - name: Fail if Plan Fails
        if: failure()
        run: exit 1

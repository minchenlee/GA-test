name: Terraform Plan - PR
on:
  pull_request:
    branches:
      - 'task-6-2'
permissions:
  id-token: write   # This is required for requesting the JWT
  contents: read    # This is required for actions/checkout
jobs:
  terraform:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: 'task-6-2/terraform'
    steps:       
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: '1.6.6'

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-region: ${{ secrets.AWS_REGION }}
          role-to-assume: ${{ secrets.AWS_GithubActionTerraformRole_ARN }}
          
      - name: Terraform Init
        id: init
        run: terraform init

      - name: Terraform Validate
        id: validate
        run: terraform validate -no-color

      - name: Terraform Plan
        id: plan
        run: terraform plan -no-color
        continue-on-error: true

      - name: Comment PR with Terraform Plan Result
        uses: actions/github-script@v6
        if: github.event_name == 'pull_request'
        with:
          github-token: ${{ secrets.PR_TOKEN }}
          script: |
            const output = `${{ steps.plan.outputs.stdout }}`;
            const planFail = `${{ steps.plan.outputs.stderr }}`;
            let body = `#### Terraform Plan Output\n\`\`\`\n${output}\n\`\`\``;
            if (planFail.length > 0) {
              body += `\n#### Errors\n\`\`\`\n${planFail}\n\`\`\``;
            }
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: body
            });
      
      - name: Fail if Plan Fails
        if: failure()
        run: exit 1
